#!/usr/bin/env python3

import sys
from threading import Thread
from scapy.all import *

# Dot11ATIM, Dot11Ack, Dot11AssoReq, Dot11AssoResp, Dot11Auth, Dot11Beacon, Dot11Deauth, Dot11Disas, Dot11ProbeReq, Dot11ProbeResp, Dot11ReassoReq, Dot11ReassoResp, LLC

interface = "wlp0s29u1u3mon"

channels = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]
def hopch(i): os.system(f"sudo iw dev '{interface}' set channel {i}")

def thread_hopch():
    while True:
        for i in channels:
            hopch(i)
            time.sleep(1)


file_Dot11ATIM       = open("hcx-wifi-test_Dot11ATIM.log", "w") 
file_Dot11Ack        = open("hcx-wifi-test_Dot11Ack.log", "w") 
file_Dot11AssoReq    = open("hcx-wifi-test_Dot11AssoReq.log", "w") 
file_Dot11AssoResp   = open("hcx-wifi-test_Dot11AssoResp.log", "w") 
file_Dot11Auth       = open("hcx-wifi-test_Dot11Auth.log", "w") 
file_Dot11Beacon     = open("hcx-wifi-test_Dot11Beacon.log", "w") 
file_Dot11Deauth     = open("hcx-wifi-test_Dot11Deauth.log", "w") 
file_Dot11Disas      = open("hcx-wifi-test_Dot11Disas.log", "w") 
file_Dot11ProbeReq   = open("hcx-wifi-test_Dot11ProbeReq.log", "w") 
file_Dot11ProbeResp  = open("hcx-wifi-test_Dot11ProbeResp.log", "w") 
file_Dot11ReassoReq  = open("hcx-wifi-test_Dot11ReassoReq.log", "w") 
file_Dot11ReassoResp = open("hcx-wifi-test_Dot11ReassoResp.log", "w") 

def write2file(s, f):
    g = ("[" * 20) + "\n" + s + "\n" + ("]" * 20) + "\n"
    f.write(g)

def callback(packet):
    a = str(packet.show(dump=True))
    if packet.haslayer(Dot11ATIM):       write2file(a, file_Dot11ATIM)
    if packet.haslayer(Dot11Ack):        write2file(a, file_Dot11Ack)
    if packet.haslayer(Dot11AssoReq):    write2file(a, file_Dot11AssoReq)
    if packet.haslayer(Dot11AssoResp):   write2file(a, file_Dot11AssoResp)
    if packet.haslayer(Dot11Auth):       write2file(a, file_Dot11Auth)
    if packet.haslayer(Dot11Beacon):     write2file(a, file_Dot11Beacon)
    if packet.haslayer(Dot11Deauth):     write2file(a, file_Dot11Deauth)
    if packet.haslayer(Dot11Disas):      write2file(a, file_Dot11Disas)
    if packet.haslayer(Dot11ProbeReq):   write2file(a, file_Dot11ProbeReq)
    if packet.haslayer(Dot11ProbeResp):  write2file(a, file_Dot11ProbeResp)
    if packet.haslayer(Dot11ReassoReq):  write2file(a, file_Dot11ReassoReq)
    if packet.haslayer(Dot11ReassoResp): write2file(a, file_Dot11ReassoResp)

if __name__ == "__main__":
    th_hop = Thread(target=thread_hopch)
    th_hop.start()

    sniff(prn=callback, iface=interface)
