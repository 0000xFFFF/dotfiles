#!/usr/bin/env python3

# DETECT DEAUTH:
#    (wlan.fc.type == 0) && (wlan.fc.type_subtype == 0x0c)
#    (wlan.fc.type eq 0) && (wlan.fc.type_subtype eq 0x0c)
#    (wlan.fc.type eq 0) && (wlan.fc.type_subtype eq 12)
#
# Management Frames                                            wlan.fc.type eq 0
# Control Frames                                               wlan.fc.type eq 1
# Data Frames                                                  wlan.fc.type eq 2
# Association Request                                          wlan.fc.type_subtype eq 0
# Association response                                         wlan.fc.type_subtype eq 1
# Reassociation Request                                        wlan.fc.type_subtype eq 2
# Reassociation Response                                       wlan.fc.type_subtype eq 3
# Probe Request                                                wlan.fc.type_subtype eq 4
# Probe Response                                               wlan.fc.type_subtype eq 5
# Beacon                                                       wlan.fc.type_subtype eq 8
# Announcement Traffic Indication MAP (ATIM)                   wlan.fc.type_subtype eq 9
# Disassociate                                                 wlan.fc.type_subtype eq 10
# Authentication                                               wlan.fc.type_subtype eq 11
# Deauthentication                                             wlan.fc.type_subtype eq 12
# Action Frames                                                wlan.fc.type_subtype eq 13
# Block Acknowledgement (ACK) Request                          wlan.fc.type_subtype eq 24
# Block ACK                                                    wlan.fc.type_subtype eq 25
# Power-Save Poll                                              wlan.fc.type_subtype eq 26
# Request to Send                                              wlan.fc.type_subtype eq 27
# Clear to Send                                                wlan.fc.type_subtype eq 28
# ACK                                                          wlan.fc.type_subtype eq 29
# Contention Free Period End                                   wlan.fc.type_subtype eq 30
# Contention Free Period End ACK                               wlan.fc.type_subtype eq 31
# Data + Contention Free ACK                                   wlan.fc.type_subtype eq 33
# Data + Contention Free Poll                                  wlan.fc.type_subtype eq 34
# Data + Contention Free ACK + Contention Free Poll            wlan.fc.type_subtype eq 35
# NULL Data                                                    wlan.fc.type_subtype eq 36
# NULL Data + Contention Free ACK                              wlan.fc.type_subtype eq 37
# NULL Data + Contention Free Poll                             wlan.fc.type_subtype eq 38
# NULL Data + Contention Free ACK + Contention Free Poll       wlan.fc.type_subtype eq 39
# QoS Data                                                     wlan.fc.type_subtype eq 40
# QoS Data + Contention Free ACK                               wlan.fc.type_subtype eq 41
# QoS Data + Contention Free Poll                              wlan.fc.type_subtype eq 42
# QoS Data + Contention Free ACK + Contention Free Poll        wlan.fc.type_subtype eq 43
# NULL QoS Data                                                wlan.fc.type_subtype eq 44
# NULL QoS Data + Contention Free Poll                         wlan.fc.type_subtype eq 46
# NULL QoS Data + Contention Free ACK + Contention Free Poll   wlan.fc.type_subtype eq 47

import subprocess # use subprocess module to run commands
import os         # import os because we want to check for sudo

# must be root
#if not 'SUDO_UID' in os.environ.keys():
#    print("must be root")
#    exit()

# find all adapters
lines = subprocess.run(["tshark", "-D"], capture_output=True).stdout.decode()

devices = []

for line in lines.split("\n"):
    if line:
        items = line.split(" ")
        if len(items) >= 2:
            devices.append(line.split(" ")[1])

# no wifi interface connected
if len(devices) == 0:
    print("no wifi adapter")
    exit()

# menu
print("Select Interface:")
for index, item in enumerate(devices):
    print(f"  {index} - {item}")
while True:
    try: wifi_interface_choice = input("> ")
    except KeyboardInterrupt: stop()
    try:
        if devices[int(wifi_interface_choice)]: break
    except:
        print("invalid")

device = devices[int(wifi_interface_choice)]

try: subprocess.run(["tshark", "-Y", "(wlan.fc.type == 0) && (wlan.fc.type_subtype == 12)", "-i", device])
except KeyboardInterrupt: print("QUIT")

